@using Events.Web.Models
@model Events.Web.Models.EventInputModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="card">
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">Event Form</h3>
            </div>
            <!-- /.card-header -->
            <!-- form start -->
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <form role="form">
                <script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>
                <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
                <link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" />
                <div class="card-body">
                    <div class="form-group" >
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-auto">
                            <input class="form-control" id="Title" name="Title" placeholder="Event Title" required
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })

                    </div>
                  </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EventType, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-auto">
                                <select class="form-control select2" style="width: 100%;"
                                        @Html.EditorFor(model => model.EventType, new { @class ="form-control"})>
                                    <option selected="selected">Graduation</option>
                                    <option>Sports</option>
                                    <option>Conference</option>
                                    <option>Entertainment</option>
                                </select>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.StartDateTime, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-auto">
                            @Html.DisplayFor(m => m.StartDateTime, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.EditorFor(model => model.StartDateTime, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.endDateTime, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-auto">
                            @Html.EditorFor(model => model.endDateTime, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <script>
                        $(function () {
                            $('#StartDateTime,#endDateTime').datetimepicker({
                                useCurrent: false,
                                minDate: moment()
                            });
                            $('#StartDateTime').datetimepicker().on('dp.change', function (e) {
                                var incrementDay = moment(new Date(e.date));
                                incrementDay.add(1, 'days');
                                $('#endDateTime').data('DateTimePicker').minDate(incrementDay);
                                $(this).data("DateTimePicker").hide();
                            });

                            $('#endDateTime').datetimepicker().on('dp.change', function (e) {
                                var decrementDay = moment(new Date(e.date));
                                decrementDay.subtract(1, 'days');
                                $('#StartDateTime').data('DateTimePicker').maxDate(decrementDay);
                                $(this).data("DateTimePicker").hide();
                            });

                        });
                    </script>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-auto">
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-auto">
                            <input class="form-control" name="Location" placeholder="Enter Please enter location" required
                                   @Html.EditorFor(model => model.SpeakerTopic, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SpeakerName, "List of Speakers", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-auto">
                            @Html.DropDownList("List of Speakers", (IEnumerable<SelectListItem>)ViewData["DBSpeakers"], new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.maxCount,"Number of Participants", htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <input class="form-control" type="number" name="maxCount"  placeholder="Participants" required
                                   @Html.EditorFor(model => model.maxCount, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsPublic,"Public Event", htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.IsPublic, htmlAttributes: new { @checked = "true" })
                        </div>
                    </div>
                </div>
                
                <div class="form-group">
                    <div class="card-footer">
                        <button type="submit" class="btn btn-primary">Create</button>
                        @Html.ActionLink("Cancel", "My", null, htmlAttributes: new { @class = "btn" })
                    </div>
                </div>
            </form>
        </div>
    </div>
}
